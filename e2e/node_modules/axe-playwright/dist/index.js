"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkA11y = exports.reportViolations = exports.getViolations = exports.configureAxe = exports.injectAxe = void 0;
const fs = __importStar(require("fs"));
const utils_1 = require("./utils");
const defaultTerminalReporter_1 = __importDefault(require("./reporter/defaultTerminalReporter"));
/**
 * Injects axe executable commands in the active window
 * @param page
 */
const injectAxe = (page) => __awaiter(void 0, void 0, void 0, function* () {
    const axe = fs.readFileSync(require.resolve('axe-core/axe.min.js'), 'utf8');
    yield page.evaluate((axe) => window.eval(axe), axe);
});
exports.injectAxe = injectAxe;
/**
 * Configures axe runtime options
 * @param page
 * @param configurationOptions
 */
const configureAxe = (page, configurationOptions = {}) => __awaiter(void 0, void 0, void 0, function* () {
    yield page.evaluate((configOptions) => window.axe.configure(configOptions), configurationOptions);
});
exports.configureAxe = configureAxe;
/**
 * Runs axe-core tools on the relevant page and returns all accessibility violations detected on the page
 * @param page
 * @param context
 * @param options
 */
const getViolations = (page, context, options) => __awaiter(void 0, void 0, void 0, function* () {
    const result = yield page.evaluate(([context, options]) => {
        const axeOptions = options ? options['axeOptions'] : {};
        return window.axe.run(context || window.document, axeOptions);
    }, [context, options]);
    return result.violations;
});
exports.getViolations = getViolations;
/**
 * Report violations given the reporter.
 * @param violations
 * @param reporter
 */
const reportViolations = (violations, reporter) => __awaiter(void 0, void 0, void 0, function* () {
    yield reporter.report(violations);
});
exports.reportViolations = reportViolations;
/**
 * Performs Axe validations
 * @param page
 * @param context
 * @param options
 * @param skipFailures
 * @param reporter
 */
const checkA11y = (page, context, options, skipFailures, reporter) => __awaiter(void 0, void 0, void 0, function* () {
    var _a;
    if (context === void 0) { context = undefined; }
    if (options === void 0) { options = undefined; }
    if (skipFailures === void 0) { skipFailures = false; }
    if (reporter === void 0) { reporter = new defaultTerminalReporter_1.default(options === null || options === void 0 ? void 0 : options.detailedReport, (_a = options === null || options === void 0 ? void 0 : options.detailedReportOptions) === null || _a === void 0 ? void 0 : _a.html); }
    const violations = yield exports.getViolations(page, context, options);
    const impactedViolations = utils_1.getImpactedViolations(violations, options === null || options === void 0 ? void 0 : options.includedImpacts);
    yield exports.reportViolations(impactedViolations, reporter);
    utils_1.testResultDependsOnViolations(impactedViolations, skipFailures);
});
exports.checkA11y = checkA11y;
